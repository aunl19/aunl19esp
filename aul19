local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local gui = Instance.new("ScreenGui")
gui.Name = "aunl19ESP_TP_Fly"
gui.ResetOnSpawn = false
gui.Parent = game:GetService("CoreGui")
local function applyUICorner(inst, radius)
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, radius)
	corner.Parent = inst
end
local function addStroke(inst)
	local stroke = Instance.new("UIStroke")
	stroke.Thickness = 1.2
	stroke.Color = Color3.fromRGB(0, 0, 0)
	stroke.Parent = inst
end
local function hoverEffect(btn, normal, hover)
	btn.MouseEnter:Connect(function()
		btn.BackgroundColor3 = hover
	end)
	btn.MouseLeave:Connect(function()
		btn.BackgroundColor3 = normal
	end)
end
local avatarBtn = Instance.new("ImageButton")
avatarBtn.Size = UDim2.new(0, 60, 0, 60)
avatarBtn.Position = UDim2.new(0, 100, 0, 200)
avatarBtn.AnchorPoint = Vector2.new(0.5, 0.5)
avatarBtn.BackgroundTransparency = 1
avatarBtn.ZIndex = 10
avatarBtn.Image = ("https://www.roblox.com/headshot-thumbnail/image?userId=%d&width=420&height=420&format=png"):format(LocalPlayer.UserId)
applyUICorner(avatarBtn, 30)
avatarBtn.Parent = gui
local draggingAvatar = false
local dragInputAvatar, dragStartAvatar, startPosAvatar
local function updateAvatar(input)
	if draggingAvatar then
		local delta = input.Position - dragStartAvatar
		local newX = math.clamp(startPosAvatar.X.Offset + delta.X, 0, workspace.CurrentCamera.ViewportSize.X - avatarBtn.AbsoluteSize.X)
		local newY = math.clamp(startPosAvatar.Y.Offset + delta.Y, 0, workspace.CurrentCamera.ViewportSize.Y - avatarBtn.AbsoluteSize.Y)
		avatarBtn.Position = UDim2.new(0, newX, 0, newY)
	end
end
avatarBtn.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		draggingAvatar = true
		dragStartAvatar = input.Position
		startPosAvatar = avatarBtn.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				draggingAvatar = false
			end
		end)
	end
end)
avatarBtn.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInputAvatar = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInputAvatar then
		updateAvatar(input)
	end
end)

-- Main menu
local menu = Instance.new("Frame")
menu.Size = UDim2.new(0, 360, 0, 320)
menu.Position = UDim2.new(0, 100, 0, 100)
menu.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
menu.Visible = false
applyUICorner(menu, 10)
addStroke(menu)
menu.Parent = gui
local titleBar = Instance.new("TextLabel", menu)
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
titleBar.Text = "Made by aunl19"
titleBar.TextColor3 = Color3.new(1, 1, 1)
titleBar.Font = Enum.Font.GothamBold
titleBar.TextSize = 14
titleBar.Active = true
applyUICorner(titleBar, 10)
local draggingMenu = false
local dragStartMenu, startPosMenu
titleBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		draggingMenu = true
		dragStartMenu = input.Position
		startPosMenu = menu.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				draggingMenu = false
			end
		end)
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if draggingMenu and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		local delta = input.Position - dragStartMenu
		menu.Position = UDim2.new(startPosMenu.X.Scale, startPosMenu.X.Offset + delta.X, startPosMenu.Y.Scale, startPosMenu.Y.Offset + delta.Y)
	end
end)
avatarBtn.MouseButton1Click:Connect(function()
	menu.Visible = not menu.Visible
end)
local tabESP = Instance.new("TextButton", menu)
tabESP.Size = UDim2.new(1/3, -10, 0, 30)
tabESP.Position = UDim2.new(0, 5, 0, 30)
tabESP.Text = "ESP"
tabESP.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
tabESP.TextColor3 = Color3.new(1, 1, 1)
tabESP.Font = Enum.Font.GothamBold
applyUICorner(tabESP, 6)
addStroke(tabESP)
hoverEffect(tabESP, tabESP.BackgroundColor3, Color3.fromRGB(65, 65, 65))
local tabTP = tabESP:Clone()
tabTP.Text = "Teleport"
tabTP.Position = UDim2.new(1/3, 0, 0, 30)
tabTP.Parent = menu
local tabFly = tabESP:Clone()
tabFly.Text = "Fly"
tabFly.Position = UDim2.new(2/3, 5, 0, 30)
tabFly.Parent = menu
local espFrame = Instance.new("Frame", menu)
espFrame.Size = UDim2.new(1, 0, 1, -60)
espFrame.Position = UDim2.new(0, 0, 0, 60)
espFrame.BackgroundTransparency = 1
local tpFrame = espFrame:Clone()
tpFrame.Visible = false
tpFrame.Parent = menu
local flyFrame = espFrame:Clone()
flyFrame.Visible = false
flyFrame.Parent = menu
local function selectTab(selected)
	espFrame.Visible = (selected == tabESP)
	tpFrame.Visible = (selected == tabTP)
	flyFrame.Visible = (selected == tabFly)

	tabESP.BackgroundColor3 = (selected == tabESP) and Color3.fromRGB(45, 45, 45) or Color3.fromRGB(35, 35, 35)
	tabTP.BackgroundColor3 = (selected == tabTP) and Color3.fromRGB(45, 45, 45) or Color3.fromRGB(35, 35, 35)
	tabFly.BackgroundColor3 = (selected == tabFly) and Color3.fromRGB(45, 45, 45) or Color3.fromRGB(35, 35, 35)
end
tabESP.MouseButton1Click:Connect(function() selectTab(tabESP) end)
tabTP.MouseButton1Click:Connect(function() selectTab(tabTP) end)
tabFly.MouseButton1Click:Connect(function() selectTab(tabFly) end)
selectTab(tabESP)
local espAllButton = Instance.new("TextButton", espFrame)
espAllButton.Size = UDim2.new(1, -20, 0, 30)
espAllButton.Position = UDim2.new(0, 10, 0, 0)
espAllButton.Text = "ESP All: OFF"
espAllButton.Font = Enum.Font.GothamBold
espAllButton.TextColor3 = Color3.new(1, 1, 1)
espAllButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
applyUICorner(espAllButton, 6)
addStroke(espAllButton)
hoverEffect(espAllButton, espAllButton.BackgroundColor3, Color3.fromRGB(90, 90, 90))
local PlayerList = Instance.new("ScrollingFrame", espFrame)
PlayerList.Size = UDim2.new(1, -20, 1, -50)
PlayerList.Position = UDim2.new(0, 10, 0, 40)
PlayerList.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
PlayerList.ScrollBarThickness = 6
PlayerList.CanvasSize = UDim2.new()
PlayerList.BorderSizePixel = 0
applyUICorner(PlayerList, 5)
addStroke(PlayerList)
local UIList = Instance.new("UIListLayout", PlayerList)
UIList.Padding = UDim.new(0, 4)
local espParts, highlights = {}, {}
local function clearESP()
	for part in pairs(espParts) do
		if part and part:FindFirstChild("ESPGui") then part.ESPGui:Destroy() end
	end
	for _, h in pairs(highlights) do if h then h:Destroy() end end
	espParts, highlights = {}, {}
end
local function addESP(part, name)
	local gui = Instance.new("BillboardGui")
	gui.Name = "ESPGui"
	gui.Size = UDim2.new(0, 100, 0, 20)
	gui.AlwaysOnTop = true
	gui.StudsOffset = Vector3.new(0, 2, 0)
	gui.Adornee = part
	gui.Parent = part
	local txt = Instance.new("TextLabel", gui)
	txt.Size = UDim2.new(1, 0, 1, 0)
	txt.BackgroundTransparency = 1
	txt.TextColor3 = Color3.new(1, 1, 1)
	txt.Text = name
	txt.TextScaled = true

	espParts[part] = true
end
local function addHighlight(char)
	local hl = Instance.new("Highlight")
	hl.FillColor = Color3.fromRGB(255, 255, 0)
	hl.OutlineColor = hl.FillColor
	hl.Adornee = char
	hl.Parent = char
	highlights[char] = hl
end
local espAll = false
espAllButton.MouseButton1Click:Connect(function()
	espAll = not espAll
	espAllButton.Text = espAll and "ESP All: ON" or "ESP All: OFF"
	clearESP()
	if espAll then
		for _, p in ipairs(Players:GetPlayers()) do
			if p ~= LocalPlayer and p.Character then
				local hrp = p.Character:FindFirstChild("HumanoidRootPart")
				if hrp then
					addESP(hrp, p.Name)
					addHighlight(p.Character)
				end
			end
		end
	end
end)
local function updatePlayerList()
	for _, c in ipairs(PlayerList:GetChildren()) do
		if c:IsA("TextButton") then c:Destroy() end
	end
	for _, p in ipairs(Players:GetPlayers()) do
		if p ~= LocalPlayer then
			local b = Instance.new("TextButton", PlayerList)
			b.Size = UDim2.new(1, 0, 0, 30)
			b.Text = p.Name
			b.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
			b.TextColor3 = Color3.new(1, 1, 1)
			b.Font = Enum.Font.Gotham
			applyUICorner(b, 5)
			hoverEffect(b, b.BackgroundColor3, Color3.fromRGB(100, 100, 100))
			b.MouseButton1Click:Connect(function()
				clearESP()
				local hrp = p.Character and p.Character:FindFirstChild("HumanoidRootPart")
				if hrp then
					addESP(hrp, p.Name)
					addHighlight(p.Character)
				end
			end)
		end
	end
	task.wait()
	PlayerList.CanvasSize = UDim2.new(0, 0, 0, UIList.AbsoluteContentSize.Y)
end
Players.PlayerAdded:Connect(updatePlayerList)
Players.PlayerRemoving:Connect(updatePlayerList)
updatePlayerList()
local dropdown = Instance.new("TextButton", tpFrame)
dropdown.Size = UDim2.new(1, -20, 0, 30)
dropdown.Position = UDim2.new(0, 10, 0, 10)
dropdown.Text = "Chọn người chơi"
dropdown.Font = Enum.Font.Gotham
dropdown.TextColor3 = Color3.new(1, 1, 1)
dropdown.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
applyUICorner(dropdown, 5)
addStroke(dropdown)
local tpListFrame = Instance.new("ScrollingFrame", tpFrame)
tpListFrame.Size = UDim2.new(1, -20, 0, 100)
tpListFrame.Position = UDim2.new(0, 10, 0, 45)
tpListFrame.Visible = false
tpListFrame.ScrollBarThickness = 6
tpListFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
applyUICorner(tpListFrame, 5)
addStroke(tpListFrame)
local tpLayout = Instance.new("UIListLayout", tpListFrame)
tpLayout.Padding = UDim.new(0, 2)
local selectedTP = nil
local function updateTPList()
	for _, c in ipairs(tpListFrame:GetChildren()) do
		if c:IsA("TextButton") then c:Destroy() end
	end
	for _, p in ipairs(Players:GetPlayers()) do
		if p ~= LocalPlayer then
			local b = Instance.new("TextButton", tpListFrame)
			b.Size = UDim2.new(1, 0, 0, 25)
			b.Text = p.Name
			b.Font = Enum.Font.Gotham
			b.TextColor3 = Color3.new(1, 1, 1)
			b.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
			applyUICorner(b, 5)
			b.MouseButton1Click:Connect(function()
				selectedTP = p
				dropdown.Text = "Đã chọn: " .. p.Name
				tpListFrame.Visible = false
			end)
		end
	end
	task.wait()
	tpListFrame.CanvasSize = UDim2.new(0, 0, 0, tpLayout.AbsoluteContentSize.Y)
end
dropdown.MouseButton1Click:Connect(function()
	tpListFrame.Visible = not tpListFrame.Visible
end)
local tpButton = Instance.new("TextButton", tpFrame)
tpButton.Size = UDim2.new(1, -20, 0, 30)
tpButton.Position = UDim2.new(0, 10, 0, 160)
tpButton.Text = "Teleport"
tpButton.Font = Enum.Font.GothamBold
tpButton.TextColor3 = Color3.new(1, 1, 1)
tpButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
applyUICorner(tpButton, 5)
hoverEffect(tpButton, tpButton.BackgroundColor3, Color3.fromRGB(130, 130, 130))
tpButton.MouseButton1Click:Connect(function()
	if selectedTP and selectedTP.Character and selectedTP.Character:FindFirstChild("HumanoidRootPart") then
		LocalPlayer.Character:MoveTo(selectedTP.Character.HumanoidRootPart.Position + Vector3.new(0, 5, 0))
	else
		warn("Không thể teleport.")
	end
end)
Players.PlayerAdded:Connect(updateTPList)
Players.PlayerRemoving:Connect(updateTPList)
updateTPList()
local flyEnabled = false
local flySpeed = 50
local flyToggle = Instance.new("TextButton", flyFrame)
flyToggle.Size = UDim2.new(1, -20, 0, 40)
flyToggle.Position = UDim2.new(0, 10, 0, 10)
flyToggle.Text = "Fly: OFF"
flyToggle.Font = Enum.Font.GothamBold
flyToggle.TextColor3 = Color3.new(1, 1, 1)
flyToggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
applyUICorner(flyToggle, 6)
addStroke(flyToggle)
hoverEffect(flyToggle, flyToggle.BackgroundColor3, Color3.fromRGB(90, 90, 90))
local speedLabel = Instance.new("TextLabel", flyFrame)
speedLabel.Size = UDim2.new(1, -20, 0, 20)
speedLabel.Position = UDim2.new(0, 10, 0, 60)
speedLabel.Text = "Speed: " .. flySpeed
speedLabel.TextColor3 = Color3.new(1, 1, 1)
speedLabel.BackgroundTransparency = 1
speedLabel.Font = Enum.Font.Gotham
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
local sliderBG = Instance.new("Frame", flyFrame)
sliderBG.Size = UDim2.new(1, -20, 0, 20)
sliderBG.Position = UDim2.new(0, 10, 0, 85)
sliderBG.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
applyUICorner(sliderBG, 6)
addStroke(sliderBG)
local sliderHandle = Instance.new("Frame", sliderBG)
sliderHandle.Size = UDim2.new(flySpeed / 150, 0, 1, 0)
sliderHandle.BackgroundColor3 = Color3.fromRGB(180, 180, 180)
applyUICorner(sliderHandle, 6)
local draggingSlider = false
local function updateSlider(inputPosX)
	local relativeX = math.clamp(inputPosX - sliderBG.AbsolutePosition.X, 0, sliderBG.AbsoluteSize.X)
	local percent = relativeX / sliderBG.AbsoluteSize.X
	flySpeed = math.floor(1 + percent * 149) -- speed range 1 to 150
	sliderHandle.Size = UDim2.new(percent, 0, 1, 0)
	speedLabel.Text = "Speed: " .. flySpeed
end
sliderHandle.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		draggingSlider = true
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				draggingSlider = false
			end
		end)
	end
end)
sliderBG.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		updateSlider(input.Position.X)
		draggingSlider = true
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				draggingSlider = false
			end
		end)
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if draggingSlider and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		updateSlider(input.Position.X)
	end
end)
local bodyVelocity
local function enableFly()
	local char = LocalPlayer.Character
	if not char then return end
	local hrp = char:FindFirstChild("HumanoidRootPart")
	if not hrp then return end
	bodyVelocity = Instance.new("BodyVelocity")
	bodyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
	bodyVelocity.Velocity = Vector3.new(0, 0, 0)
	bodyVelocity.Parent = hrp
end
local function disableFly()
	if bodyVelocity then
		bodyVelocity:Destroy()
		bodyVelocity = nil
	end
end
flyToggle.MouseButton1Click:Connect(function()
	flyEnabled = not flyEnabled
	flyToggle.Text = flyEnabled and "Fly: ON" or "Fly: OFF"
	if flyEnabled then
		enableFly()
	else
		disableFly()
	end
end)
RunService.RenderStepped:Connect(function()
	if flyEnabled and bodyVelocity then
		local char = LocalPlayer.Character
		if not char then return end
		local hrp = char:FindFirstChild("HumanoidRootPart")
		if not hrp then return end

		local moveDir = Vector3.new()

		-- WASD or arrow keys movement
		if UserInputService:IsKeyDown(Enum.KeyCode.W) then
			moveDir = moveDir + workspace.CurrentCamera.CFrame.LookVector
		end
		if UserInputService:IsKeyDown(Enum.KeyCode.S) then
			moveDir = moveDir - workspace.CurrentCamera.CFrame.LookVector
		end
		if UserInputService:IsKeyDown(Enum.KeyCode.A) then
			moveDir = moveDir - workspace.CurrentCamera.CFrame.RightVector
		end
		if UserInputService:IsKeyDown(Enum.KeyCode.D) then
			moveDir = moveDir + workspace.CurrentCamera.CFrame.RightVector
		end

		-- Up and Down keys
		if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
			moveDir = moveDir + Vector3.new(0,1,0)
		end
		if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) or UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
			moveDir = moveDir - Vector3.new(0,1,0)
		end

		moveDir = moveDir.Unit
		if moveDir ~= moveDir then moveDir = Vector3.new(0, 0, 0) end -- nan check

		bodyVelocity.Velocity = moveDir * flySpeed
	end
end)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.M then
		menu.Visible = not menu.Visible
	end
end)
LocalPlayer.CharacterAdded:Connect(function(char)
	task.wait(0.5)
	menu.Parent = gui
	menu.Visible = true
end)
